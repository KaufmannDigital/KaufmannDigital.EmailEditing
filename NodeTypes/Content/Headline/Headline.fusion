prototype(KaufmannDigital.EmailEditing:Content.Headline) < prototype(KaufmannDigital.EmailEditing:ContentComponent.DualRendering) {

  mjmlRendering {
    renderer = KaufmannDigital.EmailEditing:Component.Headline {
      headline = Neos.Neos:Editable {
        property = 'headline'
      }

      fontColor = ${q(node).property('fontColor') || null}
      fontFamily = ${q(node).property('fontFamily') || null}
      fontSize = ${q(node).property('fontSize') || null}
      fontStyle = ${q(node).property('fontStyle') || null}
      fontWeight = ${q(node).property('fontWeight') || null}
      lineHeight = ${q(node).property('lineHeight') || null}
      letterSpacing = ${q(node).property('letterSpacing') || null}
      textDecoration = ${q(node).property('textDecoration') || null}
      textTransform = ${q(node).property('textTransform') || null}
      textAlign = ${q(node).property('textAlign') || null}
      padding = ${q(node).property('padding') || null}
    }
  }

  htmlRendering {
    renderer = KaufmannDigital.EmailEditing:MjmlElementRenderer {
      mjmlSource = KaufmannDigital.EmailEditing:Component.Headline {
        headline = Neos.Neos:Editable {
          property = 'headline'
        }

        fontColor = ${q(node).property('fontColor') || null}
        fontFamily = ${q(node).property('fontFamily') || null}
        fontSize = ${q(node).property('fontSize') || null}
        fontStyle = ${q(node).property('fontStyle') || null}
        fontWeight = ${q(node).property('fontWeight') || null}
        lineHeight = ${q(node).property('lineHeight') || null}
        letterSpacing = ${q(node).property('letterSpacing') || null}
        textDecoration = ${q(node).property('textDecoration') || null}
        textTransform = ${q(node).property('textTransform') || null}
        textAlign = ${q(node).property('textAlign') || null}
        padding = ${q(node).property('padding') || null}
      }
    }
  }
}
