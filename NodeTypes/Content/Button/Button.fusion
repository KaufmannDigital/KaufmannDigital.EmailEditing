prototype(KaufmannDigital.EmailEditing:Content.Button) < prototype(KaufmannDigital.EmailEditing:ContentComponent.DualRendering) {

  @context {
    componentProps = Neos.Fusion:DataStructure {
      templateNode = KaufmannDigital.EmailEditing:TemplateNodeSelector

      padding = ${q(node).property('padding')}
      padding.@if.notEmpty = ${q(node).property('padding')}
      backgroundColor = ${q(node).property('backgroundColor') || q(this.templateNode).property('buttonBackgroundColor') || '#414141'}
      color = ${q(node).property('fontColor') || q(this.templateNode).property('buttonTextColor') || '#FFFFFF'}
      align = ${q(node).property('align') || 'left'}
      href = ${!node.context.inBackend ? (q(node).property('target') || '') : null}
      href.@process.convertUris = Neos.Neos:ConvertUris

      label = Neos.Neos:Editable {
        property = 'buttonLabel'
      }
    }
  }

  mjmlRendering {
    renderer = KaufmannDigital.EmailEditing:Component.Button {
      @apply.componentProps = ${componentProps}
    }
  }

  htmlRendering {


    renderer = KaufmannDigital.EmailEditing:MjmlElementRenderer {
      backgroundColor = ${FallbackValue.contentBackgroundColor(node)}
      mjmlSource = KaufmannDigital.EmailEditing:Component.Button {
        @apply.componentProps = ${componentProps}
      }
    }
  }
}
